const Web3 = require('web3');
const Tx = require('ethereumjs-tx').Transaction;
const rpcUrl = "https://rinkeby.infura.io/v3/d1fdd8caeb5248ec83f1413e78e546f1";


const web3 = new Web3(rpcUrl);

web3.eth.accounts.wallet.add({
    privateKey: '0x4278b9f4c1a096f23336cef0c54b84bf8ec381504568ed11a73c3a07aa8b2db9',
    address: '0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C'
});

//console.log(
  //  web3.eth.accounts.wallet);
/*
const account = "0x45F4ad5A77aAA7258c8045F9E006BABd70Aa8366";

web3.eth.getBalance(account, (err, wei) => {
    balance = web3.utils.fromWei(wei, 'ether')
    console.log(balance);
});

const abi =[ { "inputs": [ { "internalType": "address payable", "name": "eoa", "type": "address" } ], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [ { "indexed": false, "internalType": "address", "name": "", "type": "address" }, { "indexed": false, "internalType": "string", "name": "", "type": "string" } ], "name": "winnerevent", "type": "event" }, { "inputs": [], "name": "auctionState", "outputs": [ { "internalType": "enum Auction.State", "name": "", "type": "uint8" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "address", "name": "", "type": "address" } ], "name": "bids", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "cancelAuction", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "endBlock", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "finalizeAuction", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "flag", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "highestBidder", "outputs": [ { "internalType": "address payable", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "highestBindingBid", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "inc", "outputs": [ { "internalType": "int256", "name": "", "type": "int256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "ipfsHash", "outputs": [ { "internalType": "string", "name": "", "type": "string" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "length", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "name": "mapl", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "owner", "outputs": [ { "internalType": "address payable", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "placeBid", "outputs": [ { "internalType": "bool", "name": "", "type": "bool" } ], "stateMutability": "payable", "type": "function" }, { "inputs": [], "name": "startBlock", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "stateMutability": "payable", "type": "receive" } ];
//contract address
const address = "0x7993267fff0B6c0885BccBC58d803750D539252b";

const contract = new web3.eth.Contract(abi, address);

//contract.methods.createAuction().send();

*/
//console.log(web3.eth.accounts[0]);

// const account = "0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C";

// web3.eth.getBalance(account, (err, wei) => {
//     balance = web3.utils.fromWei(wei, 'ether')
//     console.log(balance);
// });

const ContractABI =[ { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }, { "inputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "name": "auctions", "outputs": [ { "internalType": "contract Auction", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "createAuction", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "n", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "nm", "outputs": [ { "internalType": "string", "name": "", "type": "string" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "numberofcontracts", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "numberofcontracts_g", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "owner", "outputs": [ { "internalType": "address", "name": "", "type": "address" } ], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "sets", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "v", "outputs": [ { "internalType": "uint256", "name": "", "type": "uint256" } ], "stateMutability": "view", "type": "function" } ];

const contractAddress = "0x558b22595717B253336587c47fdc5c685c2cB526";

const mycontract = new web3.eth.Contract(ContractABI);

const bc = '';


//var contact = mycontract.new({from: "0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C", data: bc, gas:2000000});

//console.log(contact.address);


//contract.methods.createAuction().send({from:'0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C', gas:200000},(err, result) => { console.log(result) });

var myContract = new web3.eth.Contract( ContractABI, {
  //  from: '0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C', // default from address
  //  gasPrice: '20000000000' // default gas price in wei, 20 gwei in this case
});

myContract.deploy({
    data:bc
}).send({
    from: '0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C',
    gas: 2000000
}).then((instance) => { 
    console.log("Contract mined at " + instance.options.address);
    helloInstance = instance; 
});

//privatek = Buffer.from('c293ca01402b498cf37e541123cb2057fd88fa3963347ab050a6066a92342097', 'hex');
//privatekk = '0xc293ca01402b498cf37e541123cb2057fd88fa3963347ab050a6066a92342097';
//imported account

/*
privatek = Buffer.from('4278b9f4c1a096f23336cef0c54b84bf8ec381504568ed11a73c3a07aa8b2db9', 'hex');

const account1 = "0x74Ab49E03013C7dCa945f794eFdA13BE3Dee364C";

web3.eth.getBalance(account1, (err, wei) => {
    balance = web3.utils.fromWei(wei, 'ether')
    console.log(balance);
});


//build transaction
web3.eth.getTransactionCount(account1, (err, txCount) =>{
//smart contract data
 
const data = '0x6080604052600060025560006003556040518060400160405280600381526020017f61736400000000000000000000000000000000000000000000000000000000008152506004908051906020019061005992919061006c565b5034801561006657600080fd5b50610170565b8280546100789061010f565b90600052602060002090601f01602090048101928261009a57600085556100e1565b82601f106100b357805160ff19168380011785556100e1565b828001600101855582156100e1579182015b828111156100e05782518255916020019190600101906100c5565b5b5090506100ee91906100f2565b5090565b5b8082111561010b5760008160009055506001016100f3565b5090565b6000600282049050600182168061012757607f821691505b6020821081141561013b5761013a610141565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b61062a8061017f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80635930df9f1161005b5780635930df9f1461011757806359a9cf1e146101215780637c2efcba1461013f578063f58114471461015d57610088565b80632e52d6061461008d578063433eddbe146100ab57806349282d84146100c9578063571a26a0146100e7575b600080fd5b610095610167565b6040516100a2919061043b565b60405180910390f35b6100b361016d565b6040516100c0919061043b565b60405180910390f35b6100d1610177565b6040516100de9190610419565b60405180910390f35b61010160048036038101906100fc919061037e565b610205565b60405161010e91906103fe565b60405180910390f35b61011f610244565b005b6101296102a0565b604051610136919061043b565b60405180910390f35b6101476102a6565b604051610154919061043b565b60405180910390f35b6101656102ac565b005b60025481565b6000600154905090565b60048054610184906104f3565b80601f01602080910402602001604051908101604052809291908181526020018280546101b0906104f3565b80156101fd5780601f106101d2576101008083540402835291602001916101fd565b820191906000526020600020905b8154815290600101906020018083116101e057829003601f168201915b505050505081565b6000818154811061021557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560028190555060006040518060400160405280600981526020017f41536461736461736400000000000000000000000000000000000000000000008152509050806004908051906020019061029c9291906102c6565b5050565b60015481565b60035481565b600160008154809291906102bf90610525565b9190505550565b8280546102d2906104f3565b90600052602060002090601f0160209004810192826102f4576000855561033b565b82601f1061030d57805160ff191683800117855561033b565b8280016001018555821561033b579182015b8281111561033a57825182559160200191906001019061031f565b5b509050610348919061034c565b5090565b5b8082111561036557600081600090555060010161034d565b5090565b600081359050610378816105dd565b92915050565b60006020828403121561039057600080fd5b600061039e84828501610369565b91505092915050565b6103b08161049c565b82525050565b60006103c182610456565b6103cb8185610461565b93506103db8185602086016104c0565b6103e4816105cc565b840191505092915050565b6103f881610492565b82525050565b600060208201905061041360008301846103a7565b92915050565b6000602082019050818103600083015261043381846103b6565b905092915050565b600060208201905061045060008301846103ef565b92915050565b600081519050919050565b600082825260208201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006104a7826104ae565b9050919050565b60006104b982610472565b9050919050565b60005b838110156104de5780820151818401526020810190506104c3565b838111156104ed576000848401525b50505050565b6000600282049050600182168061050b57607f821691505b6020821081141561051f5761051e61059d565b5b50919050565b600061053082610492565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156105635761056261056e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6105e681610492565b81146105f157600080fd5b5056fea26469706673582212208db5f7d2c5f6371bc4e68190841b0951a475da458ee3576667964d8ab280736c64736f6c63430008000033';

const txObject = {
        nonce: web3.utils.toHex(txCount) ,
     //   to: contractAddress,
      // value: web3.utils.toHex( web3.utils.toWei('0.01','ether')) ,
        gasLimit: web3.utils.toHex(2000000)  ,
        gasPrice: web3.utils.toHex(web3.utils.toWei('10','gwei')) ,
        data: data
    }


    console.log(txObject);

    
const tx = new Tx(txObject, {chain:'rinkeby'});

tx.sign(privatek);


const serializedTransaction = tx.serialize();
const raw = '0x' + serializedTransaction.toString('Hex');

//broadcast transaction
web3.eth.sendSignedTransaction(raw,(err,txHash)=>{
    console.log('err : ',err,'txHash : ',txHash)
    //use this hash to find smartcontract on etherscan
    }).on('receipt ', console.log,);
    




// web3.eth.getBalance(account1, (err, wei) => {
//     balance = web3.utils.fromWei(wei, 'ether')
//     console.log(balance);
// });



});

*/

 //let send = web3.eth.sendTransaction({from:privatekk, to:"0xD0762510d4D90BcE826CB22c66FBC974d9Aa3Ce2", value:web3.utils.toWei('10','gwei')});

 //console.log(send);

//contract.methods.numberofcontracts().call((err, result) => { console.log("number of contracts: ", result) });


// Sign the transaction




